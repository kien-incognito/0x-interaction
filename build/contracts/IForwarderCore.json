{
  "contractName": "IForwarderCore",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ethFeeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address payable[]",
          "name": "feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "marketSellOrdersWithEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "wethSpentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetAcquiredAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "makerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "takerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feeRecipientAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "senderAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "makerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerAssetAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "makerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerFee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationTimeSeconds",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "makerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "makerFeeAssetData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "takerFeeAssetData",
              "type": "bytes"
            }
          ],
          "internalType": "struct LibOrder.Order[]",
          "name": "orders",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetBuyAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "signatures",
          "type": "bytes[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ethFeeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address payable[]",
          "name": "feeRecipients",
          "type": "address[]"
        }
      ],
      "name": "marketBuyOrdersWithEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "wethSpentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "makerAssetAcquiredAmount",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ethFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"}],\"name\":\"marketBuyOrdersWithEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wethSpentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAcquiredAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"makerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"takerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeRecipientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"senderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerAssetAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationTimeSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"makerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"makerFeeAssetData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"takerFeeAssetData\",\"type\":\"bytes\"}],\"internalType\":\"struct LibOrder.Order[]\",\"name\":\"orders\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes[]\",\"name\":\"signatures\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ethFeeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address payable[]\",\"name\":\"feeRecipients\",\"type\":\"address[]\"}],\"name\":\"marketSellOrdersWithEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"wethSpentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"makerAssetAcquiredAmount\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"marketBuyOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],uint256,bytes[],uint256[],address[])\":{\"details\":\"Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).      Any ETH not spent will be refunded to sender.\",\"params\":{\"ethFeeAmounts\":\"Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\",\"feeRecipients\":\"Addresses that will receive ETH when orders are filled.\",\"makerAssetBuyAmount\":\"Desired amount of makerAsset to purchase.\",\"orders\":\"Array of order specifications used containing desired makerAsset and WETH as takerAsset.\",\"signatures\":\"Proofs that orders have been created by makers.\"},\"return\":\"wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\"},\"marketSellOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256[],address[])\":{\"details\":\"Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent      as possible, accounting for order and forwarder fees.\",\"params\":{\"ethFeeAmounts\":\"Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\",\"feeRecipients\":\"Addresses that will receive ETH when orders are filled.\",\"orders\":\"Array of order specifications used containing desired makerAsset and WETH as takerAsset.\",\"signatures\":\"Proofs that orders have been created by makers.\"},\"return\":\"wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@0x/contracts-exchange-forwarder/contracts/src/interfaces/IForwarderCore.sol\":\"IForwarderCore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@0x/contracts-exchange-forwarder/contracts/src/interfaces/IForwarderCore.sol\":{\"keccak256\":\"0xe389a309ef9533bbc134e248f7c976b5831e78b972e94999543b69dd64dcb9e0\",\"urls\":[\"bzz-raw://b9c8424b362cccf711eb45a60dfb70271f44a3cc71203bebe6f09eaf68ada010\",\"dweb:/ipfs/QmSnKwhoBoiV66vm82NXTNGCEGUyX4fGxn4fbWwUAVnuJm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\":{\"keccak256\":\"0xedb2f1e66e7ece2302b4dd19d0ef29a0ffeefddae7e9a81f7104155ac3cbb75b\",\"urls\":[\"bzz-raw://9a490801ffde73bb98aa3de52ef2d615894d188820ebe4c8cd340f5cd33462ad\",\"dweb:/ipfs/QmUTSaJ6GTvNoYCmpd9dv2mz25vakoLS9tQpiF1ohAUMFV\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMath.sol\":{\"keccak256\":\"0xc331418f75cd832accf9dc439be811e10d99f1d2de3a9c0321fd3f127cdf1e54\",\"urls\":[\"bzz-raw://8a090ac0a55200b6f5624c41fff2ad21e5c673b7fcd0faf1bc88017087bbb1b2\",\"dweb:/ipfs/QmWhxuazHstpSCYDQJscHnAh6ngW7SHKT79t6yQHaJHgmi\"]},\"@0x/contracts-exchange-libs/contracts/src/LibMathRichErrors.sol\":{\"keccak256\":\"0xd2d047534facd6051467dd7a22d7ee9fd4e54e63bb5a5fae2511eac7332fad3d\",\"urls\":[\"bzz-raw://5e0aeedd55c996fd72004a14f5c528ed60b46631ca9599bbb7925c8342ca3be4\",\"dweb:/ipfs/QmNi1ozt4sYmn4pCobjU7FQ4KGUvK77pCyWUtbD18uQgVm\"]},\"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\":{\"keccak256\":\"0x1b7b1e1a2dff4249c6f6c500000342a805f372131797b6d7314435204a651ad4\",\"urls\":[\"bzz-raw://19c11b77022ccfa530af75f236ea00ecb92aa5476f96abbde268163660b3906b\",\"dweb:/ipfs/Qmf1MtwPLpocsBArn8Npyzu4AtMqSagYTuee8JdbMXXwHM\"]},\"@0x/contracts-utils/contracts/src/LibEIP712.sol\":{\"keccak256\":\"0xe19c3cbc71fbea0fdb45c1763306550015d940bea9dbec5f3fd2edfe2165d673\",\"urls\":[\"bzz-raw://267d263f0453352a1ac8d8085a13c4976fb8c964eff8d3aab0a84173d1438efb\",\"dweb:/ipfs/QmbaRw85MYYP3KTmQ68gYdEnFyMqD7frwjxxwsj4j4JCr1\"]},\"@0x/contracts-utils/contracts/src/LibRichErrors.sol\":{\"keccak256\":\"0xe3ce6ded2fea3cc80998ca4d364bda530e273af0ba1c78d22a6cdadb6f64186e\",\"urls\":[\"bzz-raw://8239629dbcee9797a8f8157f03c2b78827b446787b4d53b3033a3e1ab538ad0b\",\"dweb:/ipfs/QmbttkX94CxMkS6t1K4He5bNwGKCRUhKqTt9pNsAL5ynst\"]},\"@0x/contracts-utils/contracts/src/LibSafeMath.sol\":{\"keccak256\":\"0xd0da9ac1905381832f6612774cb7eced3b4b60459d6bafa59f5424955b44c935\",\"urls\":[\"bzz-raw://ede4bbe2dac43c6cc4e3b7a22285e00d55b31fb8cc00b375c6ac4714298b7e6d\",\"dweb:/ipfs/QmWbN5qbJSNYrMMZMugaH5itTVSexe9yPsCPuArQVCLUgi\"]},\"@0x/contracts-utils/contracts/src/LibSafeMathRichErrors.sol\":{\"keccak256\":\"0xcf6adae04bd7af8e41fcd40ad148cc3d1cd5596bd42b01961b735c9b416a6572\",\"urls\":[\"bzz-raw://103791140e631e9d670bbc99e5f8e546f56061c5d49de97754006ce2c252d61e\",\"dweb:/ipfs/QmeRMyYFSk7n1sLzRSGqxcoX1sKQSdAQya6bRy6nseu6xX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/*\n\n  Copyright 2019 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-exchange-libs/contracts/src/LibOrder.sol\";\nimport \"@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol\";\n\n\ncontract IForwarderCore {\n\n    /// @dev Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent\n    ///      as possible, accounting for order and forwarder fees.\n    /// @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n    /// @param feeRecipients Addresses that will receive ETH when orders are filled.\n    /// @return wethSpentAmount Amount of WETH spent on the given set of orders.\n    /// @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\n    function marketSellOrdersWithEth(\n        LibOrder.Order[] memory orders,\n        bytes[] memory signatures,\n        uint256[] memory ethFeeAmounts,\n        address payable[] memory feeRecipients\n    )\n        public\n        payable\n        returns (\n            uint256 wethSpentAmount,\n            uint256 makerAssetAcquiredAmount\n        );\n\n    /// @dev Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.\n    ///      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can\n    ///      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).\n    ///      Any ETH not spent will be refunded to sender.\n    /// @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n    /// @param makerAssetBuyAmount Desired amount of makerAsset to purchase.\n    /// @param signatures Proofs that orders have been created by makers.\n    /// @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n    /// @param feeRecipients Addresses that will receive ETH when orders are filled.\n    /// @return wethSpentAmount Amount of WETH spent on the given set of orders.\n    /// @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.\n    function marketBuyOrdersWithEth(\n        LibOrder.Order[] memory orders,\n        uint256 makerAssetBuyAmount,\n        bytes[] memory signatures,\n        uint256[] memory ethFeeAmounts,\n        address payable[] memory feeRecipients\n    )\n        public\n        payable\n        returns (\n            uint256 wethSpentAmount,\n            uint256 makerAssetAcquiredAmount\n        );\n}\n",
  "sourcePath": "@0x/contracts-exchange-forwarder/contracts/src/interfaces/IForwarderCore.sol",
  "ast": {
    "absolutePath": "@0x/contracts-exchange-forwarder/contracts/src/interfaces/IForwarderCore.sol",
    "exportedSymbols": {
      "IForwarderCore": [
        3377
      ]
    },
    "id": 3378,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3333,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:10"
      },
      {
        "id": 3334,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:10"
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 3335,
        "nodeType": "ImportDirective",
        "scope": 3378,
        "sourceUnit": 4490,
        "src": "639:64:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "id": 3336,
        "nodeType": "ImportDirective",
        "scope": 3378,
        "sourceUnit": 4064,
        "src": "704:70:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 3377,
        "linearizedBaseContracts": [
          3377
        ],
        "name": "IForwarderCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent\n      as possible, accounting for order and forwarder fees.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 3355,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketSellOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3339,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1588:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4424_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3337,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4424,
                      "src": "1588:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4424_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 3338,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1588:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4424_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3342,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1628:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3340,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1628:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3341,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1628:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3345,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1663:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3343,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1663:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3344,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1663:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3348,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1703:38:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3346,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1703:15:10",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 3347,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1703:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:169:10"
            },
            "returnParameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3351,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1809:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1809:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3353,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1846:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1795:93:10"
            },
            "scope": 3377,
            "src": "1546:343:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.\n      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can\n      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).\n      Any ETH not spent will be refunded to sender.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param makerAssetBuyAmount Desired amount of makerAsset to purchase.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 3376,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketBuyOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3358,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2934:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4424_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3356,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4424,
                      "src": "2934:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4424_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 3357,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2934:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4424_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "name": "makerAssetBuyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2974:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3363,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3011:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3361,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3011:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3362,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3011:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3366,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3046:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3364,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3046:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3365,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3046:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3369,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3086:38:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3367,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3086:15:10",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 3368,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3086:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2924:206:10"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3372,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3192:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3374,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3229:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3178:93:10"
            },
            "scope": 3377,
            "src": "2893:379:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3378,
        "src": "777:2497:10"
      }
    ],
    "src": "580:2695:10"
  },
  "legacyAST": {
    "absolutePath": "@0x/contracts-exchange-forwarder/contracts/src/interfaces/IForwarderCore.sol",
    "exportedSymbols": {
      "IForwarderCore": [
        3377
      ]
    },
    "id": 3378,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3333,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "580:23:10"
      },
      {
        "id": 3334,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "604:33:10"
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibOrder.sol",
        "id": 3335,
        "nodeType": "ImportDirective",
        "scope": 3378,
        "sourceUnit": 4490,
        "src": "639:64:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "file": "@0x/contracts-exchange-libs/contracts/src/LibFillResults.sol",
        "id": 3336,
        "nodeType": "ImportDirective",
        "scope": 3378,
        "sourceUnit": 4064,
        "src": "704:70:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 3377,
        "linearizedBaseContracts": [
          3377
        ],
        "name": "IForwarderCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent\n      as possible, accounting for order and forwarder fees.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 3355,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketSellOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3339,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1588:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4424_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3337,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4424,
                      "src": "1588:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4424_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 3338,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1588:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4424_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3342,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1628:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3340,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1628:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3341,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1628:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3345,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1663:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3343,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1663:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3344,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1663:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3348,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1703:38:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3346,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1703:15:10",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 3347,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1703:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:169:10"
            },
            "returnParameters": {
              "id": 3354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3351,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1809:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1809:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3353,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3355,
                  "src": "1846:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1846:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1795:93:10"
            },
            "scope": 3377,
            "src": "1546:343:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.\n      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can\n      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).\n      Any ETH not spent will be refunded to sender.\n @param orders Array of order specifications used containing desired makerAsset and WETH as takerAsset.\n @param makerAssetBuyAmount Desired amount of makerAsset to purchase.\n @param signatures Proofs that orders have been created by makers.\n @param ethFeeAmounts Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.\n @param feeRecipients Addresses that will receive ETH when orders are filled.\n @return wethSpentAmount Amount of WETH spent on the given set of orders.\n @return makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders.",
            "id": 3376,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketBuyOrdersWithEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3358,
                  "name": "orders",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2934:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$4424_memory_$dyn_memory_ptr",
                    "typeString": "struct LibOrder.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3356,
                      "name": "LibOrder.Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4424,
                      "src": "2934:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$4424_storage_ptr",
                        "typeString": "struct LibOrder.Order"
                      }
                    },
                    "id": 3357,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2934:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$4424_storage_$dyn_storage_ptr",
                      "typeString": "struct LibOrder.Order[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "name": "makerAssetBuyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "2974:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2974:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3363,
                  "name": "signatures",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3011:25:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3361,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "3011:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 3362,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3011:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3366,
                  "name": "ethFeeAmounts",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3046:30:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3364,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3046:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3365,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3046:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3369,
                  "name": "feeRecipients",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3086:38:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3367,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3086:15:10",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 3368,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3086:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2924:206:10"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3372,
                  "name": "wethSpentAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3192:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3374,
                  "name": "makerAssetAcquiredAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3376,
                  "src": "3229:32:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3178:93:10"
            },
            "scope": 3377,
            "src": "2893:379:10",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3378,
        "src": "777:2497:10"
      }
    ],
    "src": "580:2695:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-19T03:47:12.212Z",
  "devdoc": {
    "methods": {
      "marketBuyOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],uint256,bytes[],uint256[],address[])": {
        "details": "Attempt to buy makerAssetBuyAmount of makerAsset by selling ETH provided with transaction.      The Forwarder may *fill* more than makerAssetBuyAmount of the makerAsset so that it can      pay takerFees where takerFeeAssetData == makerAssetData (i.e. percentage fees).      Any ETH not spent will be refunded to sender.",
        "params": {
          "ethFeeAmounts": "Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.",
          "feeRecipients": "Addresses that will receive ETH when orders are filled.",
          "makerAssetBuyAmount": "Desired amount of makerAsset to purchase.",
          "orders": "Array of order specifications used containing desired makerAsset and WETH as takerAsset.",
          "signatures": "Proofs that orders have been created by makers."
        },
        "return": "wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders."
      },
      "marketSellOrdersWithEth((address,address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes,bytes,bytes,bytes)[],bytes[],uint256[],address[])": {
        "details": "Purchases as much of orders' makerAssets as possible by selling as much of the ETH value sent      as possible, accounting for order and forwarder fees.",
        "params": {
          "ethFeeAmounts": "Amounts of ETH, denominated in Wei, that are paid to corresponding feeRecipients.",
          "feeRecipients": "Addresses that will receive ETH when orders are filled.",
          "orders": "Array of order specifications used containing desired makerAsset and WETH as takerAsset.",
          "signatures": "Proofs that orders have been created by makers."
        },
        "return": "wethSpentAmount Amount of WETH spent on the given set of orders.makerAssetAcquiredAmount Amount of maker asset acquired from the given set of orders."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}